// <auto-generated>
// ReSharper disable RedundantUsingDirective
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable RedundantNameQualifier
// TargetFrameworkVersion = 4.51
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System;
using System.Data.SqlClient;
using System.Data.SqlTypes;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity;
using System.Threading;

namespace JFA.AdventureWorks.Entities
{
    [GeneratedCodeAttribute("EF.Reverse.POCO.Generator", "2.17.1.0")]
    public partial class CurrencyRate
    {

        ///<summary>
        /// Primary key for CurrencyRate records.
        ///</summary>
        public int CurrencyRateId { get; set; }

        ///<summary>
        /// Date and time the exchange rate was obtained.
        ///</summary>
        public DateTime CurrencyRateDate { get; set; }

        ///<summary>
        /// Exchange rate was converted from this currency code.
        ///</summary>
        public string FromCurrencyCode { get; set; }

        ///<summary>
        /// Exchange rate was converted to this currency code.
        ///</summary>
        public string ToCurrencyCode { get; set; }

        ///<summary>
        /// Average exchange rate for the day.
        ///</summary>
        public decimal AverageRate { get; set; }

        ///<summary>
        /// Final exchange rate for the day.
        ///</summary>
        public decimal EndOfDayRate { get; set; }

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        public DateTime ModifiedDate { get; set; }

        public virtual ICollection<SalesOrderHeader> SalesOrderHeaders { get; set; }

        public virtual Currency Currency_FromCurrencyCode { get; set; }
        public virtual Currency Currency_ToCurrencyCode { get; set; }
        
        public CurrencyRate()
        {
            ModifiedDate = System.DateTime.Now;
            SalesOrderHeaders = new List<SalesOrderHeader>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
