// <auto-generated>
// ReSharper disable RedundantUsingDirective
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable RedundantNameQualifier
// TargetFrameworkVersion = 4.51
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System;
using System.Data.SqlClient;
using System.Data.SqlTypes;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity;
using System.Threading;

namespace JFA.AdventureWorks.Entities
{
    public partial class ProductVendor
    {

        ///<summary>
        /// Primary key. Foreign key to Product.ProductID.
        ///</summary>
        public int ProductId { get; set; }

        ///<summary>
        /// Primary key. Foreign key to Vendor.BusinessEntityID.
        ///</summary>
        public int BusinessEntityId { get; set; }

        ///<summary>
        /// The average span of time (in days) between placing an order with the vendor and receiving the purchased product.
        ///</summary>
        public int AverageLeadTime { get; set; }

        ///<summary>
        /// The vendor's usual selling price.
        ///</summary>
        public decimal StandardPrice { get; set; }

        ///<summary>
        /// The selling price when last purchased.
        ///</summary>
        public decimal? LastReceiptCost { get; set; }

        ///<summary>
        /// Date the product was last received by the vendor.
        ///</summary>
        public DateTime? LastReceiptDate { get; set; }

        ///<summary>
        /// The maximum quantity that should be ordered.
        ///</summary>
        public int MinOrderQty { get; set; }

        ///<summary>
        /// The minimum quantity that should be ordered.
        ///</summary>
        public int MaxOrderQty { get; set; }

        ///<summary>
        /// The quantity currently on order.
        ///</summary>
        public int? OnOrderQty { get; set; }

        ///<summary>
        /// The product's unit of measure.
        ///</summary>
        public string UnitMeasureCode { get; set; }

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        public DateTime ModifiedDate { get; set; }

        public virtual Product Product { get; set; }
        public virtual UnitMeasure UnitMeasure { get; set; }
        public virtual Vendor Vendor { get; set; }
        
        public ProductVendor()
        {
            ModifiedDate = System.DateTime.Now;
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
