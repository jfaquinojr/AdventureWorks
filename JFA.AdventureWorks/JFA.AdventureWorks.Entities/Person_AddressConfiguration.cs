// <auto-generated>
// ReSharper disable RedundantUsingDirective
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable RedundantNameQualifier
// TargetFrameworkVersion = 4.51
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity;
using System.Data;
using System.Data.Entity.Core.Objects;
using System.Data.SqlClient;
using System.Data.SqlTypes;
using System.Data.Entity.ModelConfiguration;
using System.Threading;
using DatabaseGeneratedOption = System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption;

namespace JFA.AdventureWorks.Entities
{
    // Address
    public partial class Person_AddressConfiguration : EntityTypeConfiguration<Person_Address>
    {
        public Person_AddressConfiguration()
            : this("Person")
        {
        }
 
        public Person_AddressConfiguration(string schema)
        {
            ToTable(schema + ".Address");
            HasKey(x => x.AddressId);

            Property(x => x.AddressId).HasColumnName("AddressID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(DatabaseGeneratedOption.Identity);
            Property(x => x.AddressLine1).HasColumnName("AddressLine1").IsRequired().HasColumnType("nvarchar").HasMaxLength(60);
            Property(x => x.AddressLine2).HasColumnName("AddressLine2").IsOptional().HasColumnType("nvarchar").HasMaxLength(60);
            Property(x => x.City).HasColumnName("City").IsRequired().HasColumnType("nvarchar").HasMaxLength(30);
            Property(x => x.StateProvinceId).HasColumnName("StateProvinceID").IsRequired().HasColumnType("int");
            Property(x => x.PostalCode).HasColumnName("PostalCode").IsRequired().HasColumnType("nvarchar").HasMaxLength(15);
            Property(x => x.SpatialLocation).HasColumnName("SpatialLocation").IsOptional().HasColumnType("geography");
            Property(x => x.Rowguid).HasColumnName("rowguid").IsRequired().HasColumnType("uniqueidentifier");
            Property(x => x.ModifiedDate).HasColumnName("ModifiedDate").IsRequired().HasColumnType("datetime");

            // Foreign keys
            HasRequired(a => a.Person_StateProvince).WithMany(b => b.Person_Addresses).HasForeignKey(c => c.StateProvinceId); // FK_Address_StateProvince_StateProvinceID
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
