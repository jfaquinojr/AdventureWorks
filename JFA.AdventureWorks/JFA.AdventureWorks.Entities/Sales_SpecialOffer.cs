// <auto-generated>
// ReSharper disable RedundantUsingDirective
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable RedundantNameQualifier
// TargetFrameworkVersion = 4.51
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity;
using System.Data;
using System.Data.Entity.Core.Objects;
using System.Data.SqlClient;
using System.Data.SqlTypes;
using System.Data.Entity.ModelConfiguration;
using System.Threading;
using DatabaseGeneratedOption = System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption;

namespace JFA.AdventureWorks.Entities
{
    // SpecialOffer
    [GeneratedCodeAttribute("EF.Reverse.POCO.Generator", "2.17.1.0")]
    public partial class Sales_SpecialOffer
    {

        ///<summary>
        /// Primary key for SpecialOffer records.
        ///</summary>
        public int SpecialOfferId { get; set; } // SpecialOfferID (Primary key)

        ///<summary>
        /// Discount description.
        ///</summary>
        public string Description { get; set; } // Description

        ///<summary>
        /// Discount precentage.
        ///</summary>
        public decimal DiscountPct { get; set; } // DiscountPct

        ///<summary>
        /// Discount type category.
        ///</summary>
        public string Type { get; set; } // Type

        ///<summary>
        /// Group the discount applies to such as Reseller or Customer.
        ///</summary>
        public string Category { get; set; } // Category

        ///<summary>
        /// Discount start date.
        ///</summary>
        public DateTime StartDate { get; set; } // StartDate

        ///<summary>
        /// Discount end date.
        ///</summary>
        public DateTime EndDate { get; set; } // EndDate

        ///<summary>
        /// Minimum discount percent allowed.
        ///</summary>
        public int MinQty { get; set; } // MinQty

        ///<summary>
        /// Maximum discount percent allowed.
        ///</summary>
        public int? MaxQty { get; set; } // MaxQty

        ///<summary>
        /// ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
        ///</summary>
        public Guid Rowguid { get; set; } // rowguid

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        public DateTime ModifiedDate { get; set; } // ModifiedDate

        // Reverse navigation
        public virtual ICollection<Sales_SpecialOfferProduct> Sales_SpecialOfferProducts { get; set; } // Many to many mapping
        
        public Sales_SpecialOffer()
        {
            DiscountPct = 0.00m;
            MinQty = 0;
            Rowguid = System.Guid.NewGuid();
            ModifiedDate = System.DateTime.Now;
            Sales_SpecialOfferProducts = new List<Sales_SpecialOfferProduct>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
