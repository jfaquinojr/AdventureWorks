// <auto-generated>
// ReSharper disable RedundantUsingDirective
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable RedundantNameQualifier
// TargetFrameworkVersion = 4.51
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity;
using System.Data;
using System.Data.Entity.Core.Objects;
using System.Data.SqlClient;
using System.Data.SqlTypes;
using System.Data.Entity.ModelConfiguration;
using System.Threading;
using DatabaseGeneratedOption = System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption;

namespace JFA.AdventureWorks.Entities
{
    // CountryRegion
    [GeneratedCodeAttribute("EF.Reverse.POCO.Generator", "2.17.1.0")]
    public partial class Person_CountryRegion
    {

        ///<summary>
        /// ISO standard code for countries and regions.
        ///</summary>
        public string CountryRegionCode { get; set; } // CountryRegionCode (Primary key)

        ///<summary>
        /// Country or region name.
        ///</summary>
        public string Name { get; set; } // Name

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        public DateTime ModifiedDate { get; set; } // ModifiedDate

        // Reverse navigation
        public virtual ICollection<Person_StateProvince> Person_StateProvinces { get; set; } // StateProvince.FK_StateProvince_CountryRegion_CountryRegionCode
        public virtual ICollection<Sales_CountryRegionCurrency> Sales_CountryRegionCurrencies { get; set; } // Many to many mapping
        public virtual ICollection<Sales_SalesTerritory> Sales_SalesTerritories { get; set; } // SalesTerritory.FK_SalesTerritory_CountryRegion_CountryRegionCode
        
        public Person_CountryRegion()
        {
            ModifiedDate = System.DateTime.Now;
            Sales_CountryRegionCurrencies = new List<Sales_CountryRegionCurrency>();
            Sales_SalesTerritories = new List<Sales_SalesTerritory>();
            Person_StateProvinces = new List<Person_StateProvince>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
