// "borowed" from BLTookit, modified to support Entity Framework code first.
// 

 
//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was auto-generated.
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;
using System.Text;

namespace JFA.AdventureWorks.Entities
{
	public partial class AdventureWorksDb : DbContext
	{
		public virtual DbSet<Address>                               Addresses                              { get; set; }
		public virtual DbSet<AddressType>                           AddressTypes                           { get; set; }
		public virtual DbSet<AWBuildVersion>                        AWBuildVersions                        { get; set; }
		public virtual DbSet<BillOfMaterial>                        BillOfMaterials                        { get; set; }
		public virtual DbSet<BusinessEntity>                        BusinessEntities                       { get; set; }
		public virtual DbSet<BusinessEntityAddress>                 BusinessEntityAddresses                { get; set; }
		public virtual DbSet<BusinessEntityContact>                 BusinessEntityContacts                 { get; set; }
		public virtual DbSet<ContactType>                           ContactTypes                           { get; set; }
		public virtual DbSet<CountryRegion>                         CountryRegions                         { get; set; }
		public virtual DbSet<CountryRegionCurrency>                 CountryRegionCurrencies                { get; set; }
		public virtual DbSet<CreditCard>                            CreditCards                            { get; set; }
		public virtual DbSet<Culture>                               Cultures                               { get; set; }
		public virtual DbSet<Currency>                              Currencies                             { get; set; }
		public virtual DbSet<CurrencyRate>                          CurrencyRates                          { get; set; }
		public virtual DbSet<Customer>                              Customers                              { get; set; }
		public virtual DbSet<DatabaseLog>                           DatabaseLogs                           { get; set; }
		public virtual DbSet<Department>                            Departments                            { get; set; }
		public virtual DbSet<Document>                              Documents                              { get; set; }
		public virtual DbSet<EmailAddress>                          EmailAddresses                         { get; set; }
		public virtual DbSet<Employee>                              Employees                              { get; set; }
		public virtual DbSet<EmployeeDepartmentHistory>             EmployeeDepartmentHistories            { get; set; }
		public virtual DbSet<EmployeePayHistory>                    EmployeePayHistories                   { get; set; }
		public virtual DbSet<ErrorLog>                              ErrorLogs                              { get; set; }
		public virtual DbSet<Illustration>                          Illustrations                          { get; set; }
		public virtual DbSet<JobCandidate>                          JobCandidates                          { get; set; }
		public virtual DbSet<Location>                              Locations                              { get; set; }
		public virtual DbSet<Password>                              Passwords                              { get; set; }
		public virtual DbSet<Person>                                People                                 { get; set; }
		public virtual DbSet<PersonCreditCard>                      PersonCreditCards                      { get; set; }
		public virtual DbSet<PersonPhone>                           PersonPhones                           { get; set; }
		public virtual DbSet<PhoneNumberType>                       PhoneNumberTypes                       { get; set; }
		public virtual DbSet<Product>                               Products                               { get; set; }
		public virtual DbSet<ProductCategory>                       ProductCategories                      { get; set; }
		public virtual DbSet<ProductCostHistory>                    ProductCostHistories                   { get; set; }
		public virtual DbSet<ProductDescription>                    ProductDescriptions                    { get; set; }
		public virtual DbSet<ProductDocument>                       ProductDocuments                       { get; set; }
		public virtual DbSet<ProductInventory>                      ProductInventories                     { get; set; }
		public virtual DbSet<ProductListPriceHistory>               ProductListPriceHistories              { get; set; }
		public virtual DbSet<ProductModel>                          ProductModels                          { get; set; }
		public virtual DbSet<ProductModelIllustration>              ProductModelIllustrations              { get; set; }
		public virtual DbSet<ProductModelProductDescriptionCulture> ProductModelProductDescriptionCultures { get; set; }
		public virtual DbSet<ProductPhoto>                          ProductPhotos                          { get; set; }
		public virtual DbSet<ProductProductPhoto>                   ProductProductPhotos                   { get; set; }
		public virtual DbSet<ProductReview>                         ProductReviews                         { get; set; }
		public virtual DbSet<ProductSubcategory>                    ProductSubcategories                   { get; set; }
		public virtual DbSet<ProductVendor>                         ProductVendors                         { get; set; }
		public virtual DbSet<PurchaseOrderDetail>                   PurchaseOrderDetails                   { get; set; }
		public virtual DbSet<PurchaseOrderHeader>                   PurchaseOrderHeaders                   { get; set; }
		public virtual DbSet<SalesOrderDetail>                      SalesOrderDetails                      { get; set; }
		public virtual DbSet<SalesOrderHeader>                      SalesOrderHeaders                      { get; set; }
		public virtual DbSet<SalesOrderHeaderSalesReason>           SalesOrderHeaderSalesReasons           { get; set; }
		public virtual DbSet<SalesPerson>                           SalesPeople                            { get; set; }
		public virtual DbSet<SalesPersonQuotaHistory>               SalesPersonQuotaHistories              { get; set; }
		public virtual DbSet<SalesReason>                           SalesReasons                           { get; set; }
		public virtual DbSet<SalesTaxRate>                          SalesTaxRates                          { get; set; }
		public virtual DbSet<SalesTerritory>                        SalesTerritories                       { get; set; }
		public virtual DbSet<SalesTerritoryHistory>                 SalesTerritoryHistories                { get; set; }
		public virtual DbSet<ScrapReason>                           ScrapReasons                           { get; set; }
		public virtual DbSet<Shift>                                 Shifts                                 { get; set; }
		public virtual DbSet<ShipMethod>                            ShipMethods                            { get; set; }
		public virtual DbSet<ShoppingCartItem>                      ShoppingCartItems                      { get; set; }
		public virtual DbSet<SpecialOffer>                          SpecialOffers                          { get; set; }
		public virtual DbSet<SpecialOfferProduct>                   SpecialOfferProducts                   { get; set; }
		public virtual DbSet<StateProvince>                         StateProvinces                         { get; set; }
		public virtual DbSet<Store>                                 Stores                                 { get; set; }
		public virtual DbSet<TransactionHistory>                    TransactionHistories                   { get; set; }
		public virtual DbSet<TransactionHistoryArchive>             TransactionHistoryArchives             { get; set; }
		public virtual DbSet<UnitMeasure>                           UnitMeasures                           { get; set; }
		public virtual DbSet<Vendor>                                Vendors                                { get; set; }
		public virtual DbSet<WorkOrder>                             WorkOrders                             { get; set; }
		public virtual DbSet<WorkOrderRouting>                      WorkOrderRoutings                      { get; set; }
		public AdventureWorksDb() : base("name=AdventureWorksDb"){}
	}

	[Table("Address", Schema="Person")]
	public partial class Address
	{
		[Required, Key, Column(Order = 0)]
		public int      AddressID       { get; set; } // int(10)
		[Required, MaxLength(60, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   AddressLine1    { get; set; } // nvarchar(60)
		[MaxLength(60, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   AddressLine2    { get; set; } // nvarchar(60)
		[Required, MaxLength(30, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   City            { get; set; } // nvarchar(30)
		[Required]
		public int      StateProvinceID { get; set; } // int(10)
		[Required, MaxLength(15, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   PostalCode      { get; set; } // nvarchar(15)
		public byte[]   SpatialLocation { get; set; } // geography(-1)
		[Required]
		public Guid     rowguid         { get; set; } // uniqueidentifier
		[Required]
		public DateTime ModifiedDate    { get; set; } // datetime(3)
	}

	[Table("AddressType", Schema="Person")]
	public partial class AddressType
	{
		[Required, Key, Column(Order = 0)]
		public int      AddressTypeID { get; set; } // int(10)
		[Required, MaxLength(50, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   Name          { get; set; } // nvarchar(50)
		[Required]
		public Guid     rowguid       { get; set; } // uniqueidentifier
		[Required]
		public DateTime ModifiedDate  { get; set; } // datetime(3)
	}

	[Table("AWBuildVersion")]
	public partial class AWBuildVersion
	{
		[Required, Key, Column(Order = 0)]
		public byte     SystemInformationID { get; set; } // tinyint(3)
		[Required, MaxLength(25, ErrorMessage="{0} has maximum of {1} characters only."), Column("Database Version")]
		public string   DatabaseVersion     { get; set; } // nvarchar(25)
		[Required]
		public DateTime VersionDate         { get; set; } // datetime(3)
		[Required]
		public DateTime ModifiedDate        { get; set; } // datetime(3)
	}

	[Table("BillOfMaterials", Schema="Production")]
	public partial class BillOfMaterial
	{
		[Required, Key, Column(Order = 0)]
		public int       BillOfMaterialsID { get; set; } // int(10)
		public int?      ProductAssemblyID { get; set; } // int(10)
		[Required]
		public int       ComponentID       { get; set; } // int(10)
		[Required]
		public DateTime  StartDate         { get; set; } // datetime(3)
		public DateTime? EndDate           { get; set; } // datetime(3)
		[Required, MaxLength(3, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string    UnitMeasureCode   { get; set; } // nchar(3)
		[Required]
		public short     BOMLevel          { get; set; } // smallint(5)
		[Required]
		public decimal   PerAssemblyQty    { get; set; } // decimal(8,2)
		[Required]
		public DateTime  ModifiedDate      { get; set; } // datetime(3)
	}

	[Table("BusinessEntity", Schema="Person")]
	public partial class BusinessEntity
	{
		[Required, Key, Column(Order = 0)]
		public int      BusinessEntityID { get; set; } // int(10)
		[Required]
		public Guid     rowguid          { get; set; } // uniqueidentifier
		[Required]
		public DateTime ModifiedDate     { get; set; } // datetime(3)
	}

	[Table("BusinessEntityAddress", Schema="Person")]
	public partial class BusinessEntityAddress
	{
		[Required, Key, Column(Order = 0)]
		public int      BusinessEntityID { get; set; } // int(10)
		[Required, Key, Column(Order = 1)]
		public int      AddressID        { get; set; } // int(10)
		[Required, Key, Column(Order = 2)]
		public int      AddressTypeID    { get; set; } // int(10)
		[Required]
		public Guid     rowguid          { get; set; } // uniqueidentifier
		[Required]
		public DateTime ModifiedDate     { get; set; } // datetime(3)
	}

	[Table("BusinessEntityContact", Schema="Person")]
	public partial class BusinessEntityContact
	{
		[Required, Key, Column(Order = 0)]
		public int      BusinessEntityID { get; set; } // int(10)
		[Required, Key, Column(Order = 1)]
		public int      PersonID         { get; set; } // int(10)
		[Required, Key, Column(Order = 2)]
		public int      ContactTypeID    { get; set; } // int(10)
		[Required]
		public Guid     rowguid          { get; set; } // uniqueidentifier
		[Required]
		public DateTime ModifiedDate     { get; set; } // datetime(3)
	}

	[Table("ContactType", Schema="Person")]
	public partial class ContactType
	{
		[Required, Key, Column(Order = 0)]
		public int      ContactTypeID { get; set; } // int(10)
		[Required, MaxLength(50, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   Name          { get; set; } // nvarchar(50)
		[Required]
		public DateTime ModifiedDate  { get; set; } // datetime(3)
	}

	[Table("CountryRegion", Schema="Person")]
	public partial class CountryRegion
	{
		[Required, Key, Column(Order = 0), MaxLength(3, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   CountryRegionCode { get; set; } // nvarchar(3)
		[Required, MaxLength(50, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   Name              { get; set; } // nvarchar(50)
		[Required]
		public DateTime ModifiedDate      { get; set; } // datetime(3)
	}

	[Table("CountryRegionCurrency", Schema="Sales")]
	public partial class CountryRegionCurrency
	{
		[Required, Key, Column(Order = 0), MaxLength(3, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   CountryRegionCode { get; set; } // nvarchar(3)
		[Required, Key, Column(Order = 1), MaxLength(3, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   CurrencyCode      { get; set; } // nchar(3)
		[Required]
		public DateTime ModifiedDate      { get; set; } // datetime(3)
	}

	[Table("CreditCard", Schema="Sales")]
	public partial class CreditCard
	{
		[Required, Key, Column(Order = 0)]
		public int      CreditCardID { get; set; } // int(10)
		[Required, MaxLength(50, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   CardType     { get; set; } // nvarchar(50)
		[Required, MaxLength(25, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   CardNumber   { get; set; } // nvarchar(25)
		[Required]
		public byte     ExpMonth     { get; set; } // tinyint(3)
		[Required]
		public short    ExpYear      { get; set; } // smallint(5)
		[Required]
		public DateTime ModifiedDate { get; set; } // datetime(3)
	}

	[Table("Culture", Schema="Production")]
	public partial class Culture
	{
		[Required, Key, Column(Order = 0), MaxLength(6, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   CultureID    { get; set; } // nchar(6)
		[Required, MaxLength(50, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   Name         { get; set; } // nvarchar(50)
		[Required]
		public DateTime ModifiedDate { get; set; } // datetime(3)
	}

	[Table("Currency", Schema="Sales")]
	public partial class Currency
	{
		[Required, Key, Column(Order = 0), MaxLength(3, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   CurrencyCode { get; set; } // nchar(3)
		[Required, MaxLength(50, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   Name         { get; set; } // nvarchar(50)
		[Required]
		public DateTime ModifiedDate { get; set; } // datetime(3)
	}

	[Table("CurrencyRate", Schema="Sales")]
	public partial class CurrencyRate
	{
		[Required, Key, Column(Order = 0)]
		public int      CurrencyRateID   { get; set; } // int(10)
		[Required]
		public DateTime CurrencyRateDate { get; set; } // datetime(3)
		[Required, MaxLength(3, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   FromCurrencyCode { get; set; } // nchar(3)
		[Required, MaxLength(3, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   ToCurrencyCode   { get; set; } // nchar(3)
		[Required]
		public decimal  AverageRate      { get; set; } // money(19,4)
		[Required]
		public decimal  EndOfDayRate     { get; set; } // money(19,4)
		[Required]
		public DateTime ModifiedDate     { get; set; } // datetime(3)
	}

	[Table("Customer", Schema="Sales")]
	public partial class Customer
	{
		[Required, Key, Column(Order = 0)]
		public int      CustomerID    { get; set; } // int(10)
		public int?     PersonID      { get; set; } // int(10)
		public int?     StoreID       { get; set; } // int(10)
		public int?     TerritoryID   { get; set; } // int(10)
		[Required, MaxLength(10, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   AccountNumber { get; set; } // varchar(10)
		[Required]
		public Guid     rowguid       { get; set; } // uniqueidentifier
		[Required]
		public DateTime ModifiedDate  { get; set; } // datetime(3)
	}

	[Table("DatabaseLog")]
	public partial class DatabaseLog
	{
		[Required, Key, Column(Order = 0)]
		public int      DatabaseLogID { get; set; } // int(10)
		[Required]
		public DateTime PostTime      { get; set; } // datetime(3)
		[Required, MaxLength(128, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   DatabaseUser  { get; set; } // nvarchar(128)
		[Required, MaxLength(128, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   Event         { get; set; } // nvarchar(128)
		[MaxLength(128, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   Schema        { get; set; } // nvarchar(128)
		[MaxLength(128, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   Object        { get; set; } // nvarchar(128)
		[Required, MaxLength(-1, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   TSQL          { get; set; } // nvarchar(-1)
		[Required]
		public string   XmlEvent      { get; set; } // xml(-1)
	}

	[Table("Department", Schema="HumanResources")]
	public partial class Department
	{
		[Required, Key, Column(Order = 0)]
		public short    DepartmentID { get; set; } // smallint(5)
		[Required, MaxLength(50, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   Name         { get; set; } // nvarchar(50)
		[Required, MaxLength(50, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   GroupName    { get; set; } // nvarchar(50)
		[Required]
		public DateTime ModifiedDate { get; set; } // datetime(3)
	}

	[Table("Document", Schema="Production")]
	public partial class Document
	{
		[Required, Key, Column(Order = 0)]
		public byte[]   DocumentNode    { get; set; } // hierarchyid(892)
		public short?   DocumentLevel   { get; set; } // smallint(5)
		[Required, MaxLength(50, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   Title           { get; set; } // nvarchar(50)
		[Required]
		public int      Owner           { get; set; } // int(10)
		[Required]
		public bool     FolderFlag      { get; set; } // bit
		[Required, MaxLength(400, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   FileName        { get; set; } // nvarchar(400)
		[Required, MaxLength(8, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   FileExtension   { get; set; } // nvarchar(8)
		[Required, MaxLength(5, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   Revision        { get; set; } // nchar(5)
		[Required]
		public int      ChangeNumber    { get; set; } // int(10)
		[Required]
		public byte     Status          { get; set; } // tinyint(3)
		[MaxLength(-1, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   DocumentSummary { get; set; } // nvarchar(-1)
		[Column("Document")]
		public byte[]   DocumentField   { get; set; } // varbinary(-1)
		[Required]
		public Guid     rowguid         { get; set; } // uniqueidentifier
		[Required]
		public DateTime ModifiedDate    { get; set; } // datetime(3)
	}

	[Table("EmailAddress", Schema="Person")]
	public partial class EmailAddress
	{
		[Required, Key, Column(Order = 0)]
		public int      BusinessEntityID { get; set; } // int(10)
		[Required, Key, Column(Order = 1)]
		public int      EmailAddressID   { get; set; } // int(10)
		[MaxLength(50, ErrorMessage="{0} has maximum of {1} characters only."), Column("EmailAddress")]
		public string   EmailAddressField { get; set; } // nvarchar(50)
		[Required]
		public Guid     rowguid          { get; set; } // uniqueidentifier
		[Required]
		public DateTime ModifiedDate     { get; set; } // datetime(3)
	}

	[Table("Employee", Schema="HumanResources")]
	public partial class Employee
	{
		[Required, Key, Column(Order = 0)]
		public int      BusinessEntityID  { get; set; } // int(10)
		[Required, MaxLength(15, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   NationalIDNumber  { get; set; } // nvarchar(15)
		[Required, MaxLength(256, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   LoginID           { get; set; } // nvarchar(256)
		public byte[]   OrganizationNode  { get; set; } // hierarchyid(892)
		public short?   OrganizationLevel { get; set; } // smallint(5)
		[Required, MaxLength(50, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   JobTitle          { get; set; } // nvarchar(50)
		[Required]
		public DateTime BirthDate         { get; set; } // date
		[Required, MaxLength(1, ErrorMessage="{0} has maximum of {1} characters only.")]
		public char     MaritalStatus     { get; set; } // nchar(1)
		[Required, MaxLength(1, ErrorMessage="{0} has maximum of {1} characters only.")]
		public char     Gender            { get; set; } // nchar(1)
		[Required]
		public DateTime HireDate          { get; set; } // date
		[Required]
		public bool     SalariedFlag      { get; set; } // bit
		[Required]
		public short    VacationHours     { get; set; } // smallint(5)
		[Required]
		public short    SickLeaveHours    { get; set; } // smallint(5)
		[Required]
		public bool     CurrentFlag       { get; set; } // bit
		[Required]
		public Guid     rowguid           { get; set; } // uniqueidentifier
		[Required]
		public DateTime ModifiedDate      { get; set; } // datetime(3)
	}

	[Table("EmployeeDepartmentHistory", Schema="HumanResources")]
	public partial class EmployeeDepartmentHistory
	{
		[Required, Key, Column(Order = 0)]
		public int       BusinessEntityID { get; set; } // int(10)
		[Required, Key, Column(Order = 1)]
		public short     DepartmentID     { get; set; } // smallint(5)
		[Required, Key, Column(Order = 2)]
		public byte      ShiftID          { get; set; } // tinyint(3)
		[Required, Key, Column(Order = 3)]
		public DateTime  StartDate        { get; set; } // date
		public DateTime? EndDate          { get; set; } // date
		[Required]
		public DateTime  ModifiedDate     { get; set; } // datetime(3)
	}

	[Table("EmployeePayHistory", Schema="HumanResources")]
	public partial class EmployeePayHistory
	{
		[Required, Key, Column(Order = 0)]
		public int      BusinessEntityID { get; set; } // int(10)
		[Required, Key, Column(Order = 1)]
		public DateTime RateChangeDate   { get; set; } // datetime(3)
		[Required]
		public decimal  Rate             { get; set; } // money(19,4)
		[Required]
		public byte     PayFrequency     { get; set; } // tinyint(3)
		[Required]
		public DateTime ModifiedDate     { get; set; } // datetime(3)
	}

	[Table("ErrorLog")]
	public partial class ErrorLog
	{
		[Required, Key, Column(Order = 0)]
		public int      ErrorLogID     { get; set; } // int(10)
		[Required]
		public DateTime ErrorTime      { get; set; } // datetime(3)
		[Required, MaxLength(128, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   UserName       { get; set; } // nvarchar(128)
		[Required]
		public int      ErrorNumber    { get; set; } // int(10)
		public int?     ErrorSeverity  { get; set; } // int(10)
		public int?     ErrorState     { get; set; } // int(10)
		[MaxLength(126, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   ErrorProcedure { get; set; } // nvarchar(126)
		public int?     ErrorLine      { get; set; } // int(10)
		[Required, MaxLength(4000, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   ErrorMessage   { get; set; } // nvarchar(4000)
	}

	[Table("Illustration", Schema="Production")]
	public partial class Illustration
	{
		[Required, Key, Column(Order = 0)]
		public int      IllustrationID { get; set; } // int(10)
		public string   Diagram        { get; set; } // xml(-1)
		[Required]
		public DateTime ModifiedDate   { get; set; } // datetime(3)
	}

	[Table("JobCandidate", Schema="HumanResources")]
	public partial class JobCandidate
	{
		[Required, Key, Column(Order = 0)]
		public int      JobCandidateID   { get; set; } // int(10)
		public int?     BusinessEntityID { get; set; } // int(10)
		public string   Resume           { get; set; } // xml(-1)
		[Required]
		public DateTime ModifiedDate     { get; set; } // datetime(3)
	}

	[Table("Location", Schema="Production")]
	public partial class Location
	{
		[Required, Key, Column(Order = 0)]
		public short    LocationID   { get; set; } // smallint(5)
		[Required, MaxLength(50, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   Name         { get; set; } // nvarchar(50)
		[Required]
		public decimal  CostRate     { get; set; } // smallmoney(10,4)
		[Required]
		public decimal  Availability { get; set; } // decimal(8,2)
		[Required]
		public DateTime ModifiedDate { get; set; } // datetime(3)
	}

	[Table("Password", Schema="Person")]
	public partial class Password
	{
		[Required, Key, Column(Order = 0)]
		public int      BusinessEntityID { get; set; } // int(10)
		[Required, MaxLength(128, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   PasswordHash     { get; set; } // varchar(128)
		[Required, MaxLength(10, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   PasswordSalt     { get; set; } // varchar(10)
		[Required]
		public Guid     rowguid          { get; set; } // uniqueidentifier
		[Required]
		public DateTime ModifiedDate     { get; set; } // datetime(3)
	}

	[Table("Person", Schema="Person")]
	public partial class Person
	{
		[Required, Key, Column(Order = 0)]
		public int      BusinessEntityID      { get; set; } // int(10)
		[Required, MaxLength(2, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   PersonType            { get; set; } // nchar(2)
		[Required]
		public bool     NameStyle             { get; set; } // bit
		[MaxLength(8, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   Title                 { get; set; } // nvarchar(8)
		[Required, MaxLength(50, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   FirstName             { get; set; } // nvarchar(50)
		[MaxLength(50, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   MiddleName            { get; set; } // nvarchar(50)
		[Required, MaxLength(50, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   LastName              { get; set; } // nvarchar(50)
		[MaxLength(10, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   Suffix                { get; set; } // nvarchar(10)
		[Required]
		public int      EmailPromotion        { get; set; } // int(10)
		public string   AdditionalContactInfo { get; set; } // xml(-1)
		public string   Demographics          { get; set; } // xml(-1)
		[Required]
		public Guid     rowguid               { get; set; } // uniqueidentifier
		[Required]
		public DateTime ModifiedDate          { get; set; } // datetime(3)
	}

	[Table("PersonCreditCard", Schema="Sales")]
	public partial class PersonCreditCard
	{
		[Required, Key, Column(Order = 0)]
		public int      BusinessEntityID { get; set; } // int(10)
		[Required, Key, Column(Order = 1)]
		public int      CreditCardID     { get; set; } // int(10)
		[Required]
		public DateTime ModifiedDate     { get; set; } // datetime(3)
	}

	[Table("PersonPhone", Schema="Person")]
	public partial class PersonPhone
	{
		[Required, Key, Column(Order = 0)]
		public int      BusinessEntityID  { get; set; } // int(10)
		[Required, Key, Column(Order = 1), MaxLength(25, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   PhoneNumber       { get; set; } // nvarchar(25)
		[Required, Key, Column(Order = 2)]
		public int      PhoneNumberTypeID { get; set; } // int(10)
		[Required]
		public DateTime ModifiedDate      { get; set; } // datetime(3)
	}

	[Table("PhoneNumberType", Schema="Person")]
	public partial class PhoneNumberType
	{
		[Required, Key, Column(Order = 0)]
		public int      PhoneNumberTypeID { get; set; } // int(10)
		[Required, MaxLength(50, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   Name              { get; set; } // nvarchar(50)
		[Required]
		public DateTime ModifiedDate      { get; set; } // datetime(3)
	}

	[Table("Product", Schema="Production")]
	public partial class Product
	{
		[Required, Key, Column(Order = 0)]
		public int       ProductID             { get; set; } // int(10)
		[Required, MaxLength(50, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string    Name                  { get; set; } // nvarchar(50)
		[Required, MaxLength(25, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string    ProductNumber         { get; set; } // nvarchar(25)
		[Required]
		public bool      MakeFlag              { get; set; } // bit
		[Required]
		public bool      FinishedGoodsFlag     { get; set; } // bit
		[MaxLength(15, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string    Color                 { get; set; } // nvarchar(15)
		[Required]
		public short     SafetyStockLevel      { get; set; } // smallint(5)
		[Required]
		public short     ReorderPoint          { get; set; } // smallint(5)
		[Required]
		public decimal   StandardCost          { get; set; } // money(19,4)
		[Required]
		public decimal   ListPrice             { get; set; } // money(19,4)
		[MaxLength(5, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string    Size                  { get; set; } // nvarchar(5)
		[MaxLength(3, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string    SizeUnitMeasureCode   { get; set; } // nchar(3)
		[MaxLength(3, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string    WeightUnitMeasureCode { get; set; } // nchar(3)
		public decimal?  Weight                { get; set; } // decimal(8,2)
		[Required]
		public int       DaysToManufacture     { get; set; } // int(10)
		[MaxLength(2, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string    ProductLine           { get; set; } // nchar(2)
		[MaxLength(2, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string    Class                 { get; set; } // nchar(2)
		[MaxLength(2, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string    Style                 { get; set; } // nchar(2)
		public int?      ProductSubcategoryID  { get; set; } // int(10)
		public int?      ProductModelID        { get; set; } // int(10)
		[Required]
		public DateTime  SellStartDate         { get; set; } // datetime(3)
		public DateTime? SellEndDate           { get; set; } // datetime(3)
		public DateTime? DiscontinuedDate      { get; set; } // datetime(3)
		[Required]
		public Guid      rowguid               { get; set; } // uniqueidentifier
		[Required]
		public DateTime  ModifiedDate          { get; set; } // datetime(3)
	}

	[Table("ProductCategory", Schema="Production")]
	public partial class ProductCategory
	{
		[Required, Key, Column(Order = 0)]
		public int      ProductCategoryID { get; set; } // int(10)
		[Required, MaxLength(50, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   Name              { get; set; } // nvarchar(50)
		[Required]
		public Guid     rowguid           { get; set; } // uniqueidentifier
		[Required]
		public DateTime ModifiedDate      { get; set; } // datetime(3)
	}

	[Table("ProductCostHistory", Schema="Production")]
	public partial class ProductCostHistory
	{
		[Required, Key, Column(Order = 0)]
		public int       ProductID    { get; set; } // int(10)
		[Required, Key, Column(Order = 1)]
		public DateTime  StartDate    { get; set; } // datetime(3)
		public DateTime? EndDate      { get; set; } // datetime(3)
		[Required]
		public decimal   StandardCost { get; set; } // money(19,4)
		[Required]
		public DateTime  ModifiedDate { get; set; } // datetime(3)
	}

	[Table("ProductDescription", Schema="Production")]
	public partial class ProductDescription
	{
		[Required, Key, Column(Order = 0)]
		public int      ProductDescriptionID { get; set; } // int(10)
		[Required, MaxLength(400, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   Description          { get; set; } // nvarchar(400)
		[Required]
		public Guid     rowguid              { get; set; } // uniqueidentifier
		[Required]
		public DateTime ModifiedDate         { get; set; } // datetime(3)
	}

	[Table("ProductDocument", Schema="Production")]
	public partial class ProductDocument
	{
		[Required, Key, Column(Order = 0)]
		public int      ProductID    { get; set; } // int(10)
		[Required, Key, Column(Order = 1)]
		public byte[]   DocumentNode { get; set; } // hierarchyid(892)
		[Required]
		public DateTime ModifiedDate { get; set; } // datetime(3)
	}

	[Table("ProductInventory", Schema="Production")]
	public partial class ProductInventory
	{
		[Required, Key, Column(Order = 0)]
		public int      ProductID    { get; set; } // int(10)
		[Required, Key, Column(Order = 1)]
		public short    LocationID   { get; set; } // smallint(5)
		[Required, MaxLength(10, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   Shelf        { get; set; } // nvarchar(10)
		[Required]
		public byte     Bin          { get; set; } // tinyint(3)
		[Required]
		public short    Quantity     { get; set; } // smallint(5)
		[Required]
		public Guid     rowguid      { get; set; } // uniqueidentifier
		[Required]
		public DateTime ModifiedDate { get; set; } // datetime(3)
	}

	[Table("ProductListPriceHistory", Schema="Production")]
	public partial class ProductListPriceHistory
	{
		[Required, Key, Column(Order = 0)]
		public int       ProductID    { get; set; } // int(10)
		[Required, Key, Column(Order = 1)]
		public DateTime  StartDate    { get; set; } // datetime(3)
		public DateTime? EndDate      { get; set; } // datetime(3)
		[Required]
		public decimal   ListPrice    { get; set; } // money(19,4)
		[Required]
		public DateTime  ModifiedDate { get; set; } // datetime(3)
	}

	[Table("ProductModel", Schema="Production")]
	public partial class ProductModel
	{
		[Required, Key, Column(Order = 0)]
		public int      ProductModelID     { get; set; } // int(10)
		[Required, MaxLength(50, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   Name               { get; set; } // nvarchar(50)
		public string   CatalogDescription { get; set; } // xml(-1)
		public string   Instructions       { get; set; } // xml(-1)
		[Required]
		public Guid     rowguid            { get; set; } // uniqueidentifier
		[Required]
		public DateTime ModifiedDate       { get; set; } // datetime(3)
	}

	[Table("ProductModelIllustration", Schema="Production")]
	public partial class ProductModelIllustration
	{
		[Required, Key, Column(Order = 0)]
		public int      ProductModelID { get; set; } // int(10)
		[Required, Key, Column(Order = 1)]
		public int      IllustrationID { get; set; } // int(10)
		[Required]
		public DateTime ModifiedDate   { get; set; } // datetime(3)
	}

	[Table("ProductModelProductDescriptionCulture", Schema="Production")]
	public partial class ProductModelProductDescriptionCulture
	{
		[Required, Key, Column(Order = 0)]
		public int      ProductModelID       { get; set; } // int(10)
		[Required, Key, Column(Order = 1)]
		public int      ProductDescriptionID { get; set; } // int(10)
		[Required, Key, Column(Order = 2), MaxLength(6, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   CultureID            { get; set; } // nchar(6)
		[Required]
		public DateTime ModifiedDate         { get; set; } // datetime(3)
	}

	[Table("ProductPhoto", Schema="Production")]
	public partial class ProductPhoto
	{
		[Required, Key, Column(Order = 0)]
		public int      ProductPhotoID         { get; set; } // int(10)
		public byte[]   ThumbNailPhoto         { get; set; } // varbinary(-1)
		[MaxLength(50, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   ThumbnailPhotoFileName { get; set; } // nvarchar(50)
		public byte[]   LargePhoto             { get; set; } // varbinary(-1)
		[MaxLength(50, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   LargePhotoFileName     { get; set; } // nvarchar(50)
		[Required]
		public DateTime ModifiedDate           { get; set; } // datetime(3)
	}

	[Table("ProductProductPhoto", Schema="Production")]
	public partial class ProductProductPhoto
	{
		[Required, Key, Column(Order = 0)]
		public int      ProductID      { get; set; } // int(10)
		[Required, Key, Column(Order = 1)]
		public int      ProductPhotoID { get; set; } // int(10)
		[Required]
		public bool     Primary        { get; set; } // bit
		[Required]
		public DateTime ModifiedDate   { get; set; } // datetime(3)
	}

	[Table("ProductReview", Schema="Production")]
	public partial class ProductReview
	{
		[Required, Key, Column(Order = 0)]
		public int      ProductReviewID { get; set; } // int(10)
		[Required]
		public int      ProductID       { get; set; } // int(10)
		[Required, MaxLength(50, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   ReviewerName    { get; set; } // nvarchar(50)
		[Required]
		public DateTime ReviewDate      { get; set; } // datetime(3)
		[Required, MaxLength(50, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   EmailAddress    { get; set; } // nvarchar(50)
		[Required]
		public int      Rating          { get; set; } // int(10)
		[MaxLength(3850, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   Comments        { get; set; } // nvarchar(3850)
		[Required]
		public DateTime ModifiedDate    { get; set; } // datetime(3)
	}

	[Table("ProductSubcategory", Schema="Production")]
	public partial class ProductSubcategory
	{
		[Required, Key, Column(Order = 0)]
		public int      ProductSubcategoryID { get; set; } // int(10)
		[Required]
		public int      ProductCategoryID    { get; set; } // int(10)
		[Required, MaxLength(50, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   Name                 { get; set; } // nvarchar(50)
		[Required]
		public Guid     rowguid              { get; set; } // uniqueidentifier
		[Required]
		public DateTime ModifiedDate         { get; set; } // datetime(3)
	}

	[Table("ProductVendor", Schema="Purchasing")]
	public partial class ProductVendor
	{
		[Required, Key, Column(Order = 0)]
		public int       ProductID        { get; set; } // int(10)
		[Required, Key, Column(Order = 1)]
		public int       BusinessEntityID { get; set; } // int(10)
		[Required]
		public int       AverageLeadTime  { get; set; } // int(10)
		[Required]
		public decimal   StandardPrice    { get; set; } // money(19,4)
		public decimal?  LastReceiptCost  { get; set; } // money(19,4)
		public DateTime? LastReceiptDate  { get; set; } // datetime(3)
		[Required]
		public int       MinOrderQty      { get; set; } // int(10)
		[Required]
		public int       MaxOrderQty      { get; set; } // int(10)
		public int?      OnOrderQty       { get; set; } // int(10)
		[Required, MaxLength(3, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string    UnitMeasureCode  { get; set; } // nchar(3)
		[Required]
		public DateTime  ModifiedDate     { get; set; } // datetime(3)
	}

	[Table("PurchaseOrderDetail", Schema="Purchasing")]
	public partial class PurchaseOrderDetail
	{
		[Required, Key, Column(Order = 0)]
		public int      PurchaseOrderID       { get; set; } // int(10)
		[Required, Key, Column(Order = 1)]
		public int      PurchaseOrderDetailID { get; set; } // int(10)
		[Required]
		public DateTime DueDate               { get; set; } // datetime(3)
		[Required]
		public short    OrderQty              { get; set; } // smallint(5)
		[Required]
		public int      ProductID             { get; set; } // int(10)
		[Required]
		public decimal  UnitPrice             { get; set; } // money(19,4)
		[Required]
		public decimal  LineTotal             { get; set; } // money(19,4)
		[Required]
		public decimal  ReceivedQty           { get; set; } // decimal(8,2)
		[Required]
		public decimal  RejectedQty           { get; set; } // decimal(8,2)
		[Required]
		public decimal  StockedQty            { get; set; } // decimal(9,2)
		[Required]
		public DateTime ModifiedDate          { get; set; } // datetime(3)
	}

	[Table("PurchaseOrderHeader", Schema="Purchasing")]
	public partial class PurchaseOrderHeader
	{
		[Required, Key, Column(Order = 0)]
		public int       PurchaseOrderID { get; set; } // int(10)
		[Required]
		public byte      RevisionNumber  { get; set; } // tinyint(3)
		[Required]
		public byte      Status          { get; set; } // tinyint(3)
		[Required]
		public int       EmployeeID      { get; set; } // int(10)
		[Required]
		public int       VendorID        { get; set; } // int(10)
		[Required]
		public int       ShipMethodID    { get; set; } // int(10)
		[Required]
		public DateTime  OrderDate       { get; set; } // datetime(3)
		public DateTime? ShipDate        { get; set; } // datetime(3)
		[Required]
		public decimal   SubTotal        { get; set; } // money(19,4)
		[Required]
		public decimal   TaxAmt          { get; set; } // money(19,4)
		[Required]
		public decimal   Freight         { get; set; } // money(19,4)
		[Required]
		public decimal   TotalDue        { get; set; } // money(19,4)
		[Required]
		public DateTime  ModifiedDate    { get; set; } // datetime(3)
	}

	[Table("SalesOrderDetail", Schema="Sales")]
	public partial class SalesOrderDetail
	{
		[Required, Key, Column(Order = 0)]
		public int      SalesOrderID          { get; set; } // int(10)
		[Required, Key, Column(Order = 1)]
		public int      SalesOrderDetailID    { get; set; } // int(10)
		[MaxLength(25, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   CarrierTrackingNumber { get; set; } // nvarchar(25)
		[Required]
		public short    OrderQty              { get; set; } // smallint(5)
		[Required]
		public int      ProductID             { get; set; } // int(10)
		[Required]
		public int      SpecialOfferID        { get; set; } // int(10)
		[Required]
		public decimal  UnitPrice             { get; set; } // money(19,4)
		[Required]
		public decimal  UnitPriceDiscount     { get; set; } // money(19,4)
		[Required]
		public decimal  LineTotal             { get; set; } // numeric(38,6)
		[Required]
		public Guid     rowguid               { get; set; } // uniqueidentifier
		[Required]
		public DateTime ModifiedDate          { get; set; } // datetime(3)
	}

	[Table("SalesOrderHeader", Schema="Sales")]
	public partial class SalesOrderHeader
	{
		[Required, Key, Column(Order = 0)]
		public int       SalesOrderID           { get; set; } // int(10)
		[Required]
		public byte      RevisionNumber         { get; set; } // tinyint(3)
		[Required]
		public DateTime  OrderDate              { get; set; } // datetime(3)
		[Required]
		public DateTime  DueDate                { get; set; } // datetime(3)
		public DateTime? ShipDate               { get; set; } // datetime(3)
		[Required]
		public byte      Status                 { get; set; } // tinyint(3)
		[Required]
		public bool      OnlineOrderFlag        { get; set; } // bit
		[Required, MaxLength(25, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string    SalesOrderNumber       { get; set; } // nvarchar(25)
		[MaxLength(25, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string    PurchaseOrderNumber    { get; set; } // nvarchar(25)
		[MaxLength(15, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string    AccountNumber          { get; set; } // nvarchar(15)
		[Required]
		public int       CustomerID             { get; set; } // int(10)
		public int?      SalesPersonID          { get; set; } // int(10)
		public int?      TerritoryID            { get; set; } // int(10)
		[Required]
		public int       BillToAddressID        { get; set; } // int(10)
		[Required]
		public int       ShipToAddressID        { get; set; } // int(10)
		[Required]
		public int       ShipMethodID           { get; set; } // int(10)
		public int?      CreditCardID           { get; set; } // int(10)
		[MaxLength(15, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string    CreditCardApprovalCode { get; set; } // varchar(15)
		public int?      CurrencyRateID         { get; set; } // int(10)
		[Required]
		public decimal   SubTotal               { get; set; } // money(19,4)
		[Required]
		public decimal   TaxAmt                 { get; set; } // money(19,4)
		[Required]
		public decimal   Freight                { get; set; } // money(19,4)
		[Required]
		public decimal   TotalDue               { get; set; } // money(19,4)
		[MaxLength(128, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string    Comment                { get; set; } // nvarchar(128)
		[Required]
		public Guid      rowguid                { get; set; } // uniqueidentifier
		[Required]
		public DateTime  ModifiedDate           { get; set; } // datetime(3)
	}

	[Table("SalesOrderHeaderSalesReason", Schema="Sales")]
	public partial class SalesOrderHeaderSalesReason
	{
		[Required, Key, Column(Order = 0)]
		public int      SalesOrderID  { get; set; } // int(10)
		[Required, Key, Column(Order = 1)]
		public int      SalesReasonID { get; set; } // int(10)
		[Required]
		public DateTime ModifiedDate  { get; set; } // datetime(3)
	}

	[Table("SalesPerson", Schema="Sales")]
	public partial class SalesPerson
	{
		[Required, Key, Column(Order = 0)]
		public int      BusinessEntityID { get; set; } // int(10)
		public int?     TerritoryID      { get; set; } // int(10)
		public decimal? SalesQuota       { get; set; } // money(19,4)
		[Required]
		public decimal  Bonus            { get; set; } // money(19,4)
		[Required]
		public decimal  CommissionPct    { get; set; } // smallmoney(10,4)
		[Required]
		public decimal  SalesYTD         { get; set; } // money(19,4)
		[Required]
		public decimal  SalesLastYear    { get; set; } // money(19,4)
		[Required]
		public Guid     rowguid          { get; set; } // uniqueidentifier
		[Required]
		public DateTime ModifiedDate     { get; set; } // datetime(3)
	}

	[Table("SalesPersonQuotaHistory", Schema="Sales")]
	public partial class SalesPersonQuotaHistory
	{
		[Required, Key, Column(Order = 0)]
		public int      BusinessEntityID { get; set; } // int(10)
		[Required, Key, Column(Order = 1)]
		public DateTime QuotaDate        { get; set; } // datetime(3)
		[Required]
		public decimal  SalesQuota       { get; set; } // money(19,4)
		[Required]
		public Guid     rowguid          { get; set; } // uniqueidentifier
		[Required]
		public DateTime ModifiedDate     { get; set; } // datetime(3)
	}

	[Table("SalesReason", Schema="Sales")]
	public partial class SalesReason
	{
		[Required, Key, Column(Order = 0)]
		public int      SalesReasonID { get; set; } // int(10)
		[Required, MaxLength(50, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   Name          { get; set; } // nvarchar(50)
		[Required, MaxLength(50, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   ReasonType    { get; set; } // nvarchar(50)
		[Required]
		public DateTime ModifiedDate  { get; set; } // datetime(3)
	}

	[Table("SalesTaxRate", Schema="Sales")]
	public partial class SalesTaxRate
	{
		[Required, Key, Column(Order = 0)]
		public int      SalesTaxRateID  { get; set; } // int(10)
		[Required]
		public int      StateProvinceID { get; set; } // int(10)
		[Required]
		public byte     TaxType         { get; set; } // tinyint(3)
		[Required]
		public decimal  TaxRate         { get; set; } // smallmoney(10,4)
		[Required, MaxLength(50, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   Name            { get; set; } // nvarchar(50)
		[Required]
		public Guid     rowguid         { get; set; } // uniqueidentifier
		[Required]
		public DateTime ModifiedDate    { get; set; } // datetime(3)
	}

	[Table("SalesTerritory", Schema="Sales")]
	public partial class SalesTerritory
	{
		[Required, Key, Column(Order = 0)]
		public int      TerritoryID       { get; set; } // int(10)
		[Required, MaxLength(50, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   Name              { get; set; } // nvarchar(50)
		[Required, MaxLength(3, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   CountryRegionCode { get; set; } // nvarchar(3)
		[Required, MaxLength(50, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   Group             { get; set; } // nvarchar(50)
		[Required]
		public decimal  SalesYTD          { get; set; } // money(19,4)
		[Required]
		public decimal  SalesLastYear     { get; set; } // money(19,4)
		[Required]
		public decimal  CostYTD           { get; set; } // money(19,4)
		[Required]
		public decimal  CostLastYear      { get; set; } // money(19,4)
		[Required]
		public Guid     rowguid           { get; set; } // uniqueidentifier
		[Required]
		public DateTime ModifiedDate      { get; set; } // datetime(3)
	}

	[Table("SalesTerritoryHistory", Schema="Sales")]
	public partial class SalesTerritoryHistory
	{
		[Required, Key, Column(Order = 0)]
		public int       BusinessEntityID { get; set; } // int(10)
		[Required, Key, Column(Order = 1)]
		public int       TerritoryID      { get; set; } // int(10)
		[Required, Key, Column(Order = 2)]
		public DateTime  StartDate        { get; set; } // datetime(3)
		public DateTime? EndDate          { get; set; } // datetime(3)
		[Required]
		public Guid      rowguid          { get; set; } // uniqueidentifier
		[Required]
		public DateTime  ModifiedDate     { get; set; } // datetime(3)
	}

	[Table("ScrapReason", Schema="Production")]
	public partial class ScrapReason
	{
		[Required, Key, Column(Order = 0)]
		public short    ScrapReasonID { get; set; } // smallint(5)
		[Required, MaxLength(50, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   Name          { get; set; } // nvarchar(50)
		[Required]
		public DateTime ModifiedDate  { get; set; } // datetime(3)
	}

	[Table("Shift", Schema="HumanResources")]
	public partial class Shift
	{
		[Required, Key, Column(Order = 0)]
		public byte     ShiftID      { get; set; } // tinyint(3)
		[Required, MaxLength(50, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   Name         { get; set; } // nvarchar(50)
		[Required]
		public DateTime StartTime    { get; set; } // time(7)
		[Required]
		public DateTime EndTime      { get; set; } // time(7)
		[Required]
		public DateTime ModifiedDate { get; set; } // datetime(3)
	}

	[Table("ShipMethod", Schema="Purchasing")]
	public partial class ShipMethod
	{
		[Required, Key, Column(Order = 0)]
		public int      ShipMethodID { get; set; } // int(10)
		[Required, MaxLength(50, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   Name         { get; set; } // nvarchar(50)
		[Required]
		public decimal  ShipBase     { get; set; } // money(19,4)
		[Required]
		public decimal  ShipRate     { get; set; } // money(19,4)
		[Required]
		public Guid     rowguid      { get; set; } // uniqueidentifier
		[Required]
		public DateTime ModifiedDate { get; set; } // datetime(3)
	}

	[Table("ShoppingCartItem", Schema="Sales")]
	public partial class ShoppingCartItem
	{
		[Required, Key, Column(Order = 0)]
		public int      ShoppingCartItemID { get; set; } // int(10)
		[Required, MaxLength(50, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   ShoppingCartID     { get; set; } // nvarchar(50)
		[Required]
		public int      Quantity           { get; set; } // int(10)
		[Required]
		public int      ProductID          { get; set; } // int(10)
		[Required]
		public DateTime DateCreated        { get; set; } // datetime(3)
		[Required]
		public DateTime ModifiedDate       { get; set; } // datetime(3)
	}

	[Table("SpecialOffer", Schema="Sales")]
	public partial class SpecialOffer
	{
		[Required, Key, Column(Order = 0)]
		public int      SpecialOfferID { get; set; } // int(10)
		[Required, MaxLength(255, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   Description    { get; set; } // nvarchar(255)
		[Required]
		public decimal  DiscountPct    { get; set; } // smallmoney(10,4)
		[Required, MaxLength(50, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   Type           { get; set; } // nvarchar(50)
		[Required, MaxLength(50, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   Category       { get; set; } // nvarchar(50)
		[Required]
		public DateTime StartDate      { get; set; } // datetime(3)
		[Required]
		public DateTime EndDate        { get; set; } // datetime(3)
		[Required]
		public int      MinQty         { get; set; } // int(10)
		public int?     MaxQty         { get; set; } // int(10)
		[Required]
		public Guid     rowguid        { get; set; } // uniqueidentifier
		[Required]
		public DateTime ModifiedDate   { get; set; } // datetime(3)
	}

	[Table("SpecialOfferProduct", Schema="Sales")]
	public partial class SpecialOfferProduct
	{
		[Required, Key, Column(Order = 0)]
		public int      SpecialOfferID { get; set; } // int(10)
		[Required, Key, Column(Order = 1)]
		public int      ProductID      { get; set; } // int(10)
		[Required]
		public Guid     rowguid        { get; set; } // uniqueidentifier
		[Required]
		public DateTime ModifiedDate   { get; set; } // datetime(3)
	}

	[Table("StateProvince", Schema="Person")]
	public partial class StateProvince
	{
		[Required, Key, Column(Order = 0)]
		public int      StateProvinceID         { get; set; } // int(10)
		[Required, MaxLength(3, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   StateProvinceCode       { get; set; } // nchar(3)
		[Required, MaxLength(3, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   CountryRegionCode       { get; set; } // nvarchar(3)
		[Required]
		public bool     IsOnlyStateProvinceFlag { get; set; } // bit
		[Required, MaxLength(50, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   Name                    { get; set; } // nvarchar(50)
		[Required]
		public int      TerritoryID             { get; set; } // int(10)
		[Required]
		public Guid     rowguid                 { get; set; } // uniqueidentifier
		[Required]
		public DateTime ModifiedDate            { get; set; } // datetime(3)
	}

	[Table("Store", Schema="Sales")]
	public partial class Store
	{
		[Required, Key, Column(Order = 0)]
		public int      BusinessEntityID { get; set; } // int(10)
		[Required, MaxLength(50, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   Name             { get; set; } // nvarchar(50)
		public int?     SalesPersonID    { get; set; } // int(10)
		public string   Demographics     { get; set; } // xml(-1)
		[Required]
		public Guid     rowguid          { get; set; } // uniqueidentifier
		[Required]
		public DateTime ModifiedDate     { get; set; } // datetime(3)
	}

	[Table("TransactionHistory", Schema="Production")]
	public partial class TransactionHistory
	{
		[Required, Key, Column(Order = 0)]
		public int      TransactionID        { get; set; } // int(10)
		[Required]
		public int      ProductID            { get; set; } // int(10)
		[Required]
		public int      ReferenceOrderID     { get; set; } // int(10)
		[Required]
		public int      ReferenceOrderLineID { get; set; } // int(10)
		[Required]
		public DateTime TransactionDate      { get; set; } // datetime(3)
		[Required, MaxLength(1, ErrorMessage="{0} has maximum of {1} characters only.")]
		public char     TransactionType      { get; set; } // nchar(1)
		[Required]
		public int      Quantity             { get; set; } // int(10)
		[Required]
		public decimal  ActualCost           { get; set; } // money(19,4)
		[Required]
		public DateTime ModifiedDate         { get; set; } // datetime(3)
	}

	[Table("TransactionHistoryArchive", Schema="Production")]
	public partial class TransactionHistoryArchive
	{
		[Required, Key, Column(Order = 0)]
		public int      TransactionID        { get; set; } // int(10)
		[Required]
		public int      ProductID            { get; set; } // int(10)
		[Required]
		public int      ReferenceOrderID     { get; set; } // int(10)
		[Required]
		public int      ReferenceOrderLineID { get; set; } // int(10)
		[Required]
		public DateTime TransactionDate      { get; set; } // datetime(3)
		[Required, MaxLength(1, ErrorMessage="{0} has maximum of {1} characters only.")]
		public char     TransactionType      { get; set; } // nchar(1)
		[Required]
		public int      Quantity             { get; set; } // int(10)
		[Required]
		public decimal  ActualCost           { get; set; } // money(19,4)
		[Required]
		public DateTime ModifiedDate         { get; set; } // datetime(3)
	}

	[Table("UnitMeasure", Schema="Production")]
	public partial class UnitMeasure
	{
		[Required, Key, Column(Order = 0), MaxLength(3, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   UnitMeasureCode { get; set; } // nchar(3)
		[Required, MaxLength(50, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   Name            { get; set; } // nvarchar(50)
		[Required]
		public DateTime ModifiedDate    { get; set; } // datetime(3)
	}

	[Table("Vendor", Schema="Purchasing")]
	public partial class Vendor
	{
		[Required, Key, Column(Order = 0)]
		public int      BusinessEntityID        { get; set; } // int(10)
		[Required, MaxLength(15, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   AccountNumber           { get; set; } // nvarchar(15)
		[Required, MaxLength(50, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   Name                    { get; set; } // nvarchar(50)
		[Required]
		public byte     CreditRating            { get; set; } // tinyint(3)
		[Required]
		public bool     PreferredVendorStatus   { get; set; } // bit
		[Required]
		public bool     ActiveFlag              { get; set; } // bit
		[MaxLength(1024, ErrorMessage="{0} has maximum of {1} characters only.")]
		public string   PurchasingWebServiceURL { get; set; } // nvarchar(1024)
		[Required]
		public DateTime ModifiedDate            { get; set; } // datetime(3)
	}

	[Table("WorkOrder", Schema="Production")]
	public partial class WorkOrder
	{
		[Required, Key, Column(Order = 0)]
		public int       WorkOrderID   { get; set; } // int(10)
		[Required]
		public int       ProductID     { get; set; } // int(10)
		[Required]
		public int       OrderQty      { get; set; } // int(10)
		[Required]
		public int       StockedQty    { get; set; } // int(10)
		[Required]
		public short     ScrappedQty   { get; set; } // smallint(5)
		[Required]
		public DateTime  StartDate     { get; set; } // datetime(3)
		public DateTime? EndDate       { get; set; } // datetime(3)
		[Required]
		public DateTime  DueDate       { get; set; } // datetime(3)
		public short?    ScrapReasonID { get; set; } // smallint(5)
		[Required]
		public DateTime  ModifiedDate  { get; set; } // datetime(3)
	}

	[Table("WorkOrderRouting", Schema="Production")]
	public partial class WorkOrderRouting
	{
		[Required, Key, Column(Order = 0)]
		public int       WorkOrderID        { get; set; } // int(10)
		[Required, Key, Column(Order = 1)]
		public int       ProductID          { get; set; } // int(10)
		[Required, Key, Column(Order = 2)]
		public short     OperationSequence  { get; set; } // smallint(5)
		[Required]
		public short     LocationID         { get; set; } // smallint(5)
		[Required]
		public DateTime  ScheduledStartDate { get; set; } // datetime(3)
		[Required]
		public DateTime  ScheduledEndDate   { get; set; } // datetime(3)
		public DateTime? ActualStartDate    { get; set; } // datetime(3)
		public DateTime? ActualEndDate      { get; set; } // datetime(3)
		public decimal?  ActualResourceHrs  { get; set; } // decimal(9,4)
		[Required]
		public decimal   PlannedCost        { get; set; } // money(19,4)
		public decimal?  ActualCost         { get; set; } // money(19,4)
		[Required]
		public DateTime  ModifiedDate       { get; set; } // datetime(3)
	}
}
