// <auto-generated>
// ReSharper disable RedundantUsingDirective
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable RedundantNameQualifier
// TargetFrameworkVersion = 4.51
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity;
using System.Data;
using System.Data.Entity.Core.Objects;
using System.Data.SqlClient;
using System.Data.SqlTypes;
using System.Data.Entity.ModelConfiguration;
using System.Threading;
using DatabaseGeneratedOption = System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption;

namespace JFA.AdventureWorks.Entities
{
    // vStateProvinceCountryRegion
    public partial class Person_VStateProvinceCountryRegionConfiguration : EntityTypeConfiguration<Person_VStateProvinceCountryRegion>
    {
        public Person_VStateProvinceCountryRegionConfiguration()
            : this("Person")
        {
        }
 
        public Person_VStateProvinceCountryRegionConfiguration(string schema)
        {
            ToTable(schema + ".vStateProvinceCountryRegion");
            HasKey(x => new { x.StateProvinceId, x.StateProvinceCode, x.IsOnlyStateProvinceFlag, x.StateProvinceName, x.TerritoryId, x.CountryRegionCode, x.CountryRegionName });

            Property(x => x.StateProvinceId).HasColumnName("StateProvinceID").IsRequired().HasColumnType("int");
            Property(x => x.StateProvinceCode).HasColumnName("StateProvinceCode").IsRequired().IsFixedLength().HasColumnType("nchar").HasMaxLength(3);
            Property(x => x.IsOnlyStateProvinceFlag).HasColumnName("IsOnlyStateProvinceFlag").IsRequired().HasColumnType("bit");
            Property(x => x.StateProvinceName).HasColumnName("StateProvinceName").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.TerritoryId).HasColumnName("TerritoryID").IsRequired().HasColumnType("int");
            Property(x => x.CountryRegionCode).HasColumnName("CountryRegionCode").IsRequired().HasColumnType("nvarchar").HasMaxLength(3);
            Property(x => x.CountryRegionName).HasColumnName("CountryRegionName").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
