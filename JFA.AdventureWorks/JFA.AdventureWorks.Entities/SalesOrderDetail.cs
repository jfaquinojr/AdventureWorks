// <auto-generated>
// ReSharper disable RedundantUsingDirective
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable RedundantNameQualifier
// TargetFrameworkVersion = 4.51
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System;
using System.Data.SqlClient;
using System.Data.SqlTypes;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity;
using System.Threading;

namespace JFA.AdventureWorks.Entities
{
    public partial class SalesOrderDetail
    {

        ///<summary>
        /// Primary key. Foreign key to SalesOrderHeader.SalesOrderID.
        ///</summary>
        public int SalesOrderId { get; set; }

        ///<summary>
        /// Primary key. One incremental unique number per product sold.
        ///</summary>
        public int SalesOrderDetailId { get; set; }

        ///<summary>
        /// Shipment tracking number supplied by the shipper.
        ///</summary>
        public string CarrierTrackingNumber { get; set; }

        ///<summary>
        /// Quantity ordered per product.
        ///</summary>
        public short OrderQty { get; set; }

        ///<summary>
        /// Product sold to customer. Foreign key to Product.ProductID.
        ///</summary>
        public int ProductId { get; set; }

        ///<summary>
        /// Promotional code. Foreign key to SpecialOffer.SpecialOfferID.
        ///</summary>
        public int SpecialOfferId { get; set; }

        ///<summary>
        /// Selling price of a single product.
        ///</summary>
        public decimal UnitPrice { get; set; }

        ///<summary>
        /// Discount amount.
        ///</summary>
        public decimal UnitPriceDiscount { get; set; }

        ///<summary>
        /// Per product subtotal. Computed as UnitPrice * (1 - UnitPriceDiscount) * OrderQty.
        ///</summary>
        public decimal LineTotal { get; set; }

        ///<summary>
        /// ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
        ///</summary>
        public Guid Rowguid { get; set; }

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        public DateTime ModifiedDate { get; set; }

        public virtual SalesOrderHeader SalesOrderHeader { get; set; }
        public virtual SpecialOfferProduct SpecialOfferProduct { get; set; }
        
        public SalesOrderDetail()
        {
            UnitPriceDiscount = 0.0m;
            Rowguid = System.Guid.NewGuid();
            ModifiedDate = System.DateTime.Now;
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
