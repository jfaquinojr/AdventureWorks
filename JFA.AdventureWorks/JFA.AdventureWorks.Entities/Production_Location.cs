// <auto-generated>
// ReSharper disable RedundantUsingDirective
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable RedundantNameQualifier
// TargetFrameworkVersion = 4.51
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity;
using System.Data;
using System.Data.Entity.Core.Objects;
using System.Data.SqlClient;
using System.Data.SqlTypes;
using System.Data.Entity.ModelConfiguration;
using System.Threading;
using DatabaseGeneratedOption = System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption;

namespace JFA.AdventureWorks.Entities
{
    // Location
    [GeneratedCodeAttribute("EF.Reverse.POCO.Generator", "2.17.1.0")]
    public partial class Production_Location
    {

        ///<summary>
        /// Primary key for Location records.
        ///</summary>
        public short LocationId { get; set; } // LocationID (Primary key)

        ///<summary>
        /// Location description.
        ///</summary>
        public string Name { get; set; } // Name

        ///<summary>
        /// Standard hourly cost of the manufacturing location.
        ///</summary>
        public decimal CostRate { get; set; } // CostRate

        ///<summary>
        /// Work capacity (in hours) of the manufacturing location.
        ///</summary>
        public decimal Availability { get; set; } // Availability

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        public DateTime ModifiedDate { get; set; } // ModifiedDate

        // Reverse navigation
        public virtual ICollection<Production_ProductInventory> Production_ProductInventories { get; set; } // Many to many mapping
        public virtual ICollection<Production_WorkOrderRouting> Production_WorkOrderRoutings { get; set; } // WorkOrderRouting.FK_WorkOrderRouting_Location_LocationID
        
        public Production_Location()
        {
            CostRate = 0.00m;
            Availability = 0.00m;
            ModifiedDate = System.DateTime.Now;
            Production_ProductInventories = new List<Production_ProductInventory>();
            Production_WorkOrderRoutings = new List<Production_WorkOrderRouting>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
