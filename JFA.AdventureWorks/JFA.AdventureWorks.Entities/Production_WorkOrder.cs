// <auto-generated>
// ReSharper disable RedundantUsingDirective
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable RedundantNameQualifier
// TargetFrameworkVersion = 4.51
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity;
using System.Data;
using System.Data.Entity.Core.Objects;
using System.Data.SqlClient;
using System.Data.SqlTypes;
using System.Data.Entity.ModelConfiguration;
using System.Threading;
using DatabaseGeneratedOption = System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption;

namespace JFA.AdventureWorks.Entities
{
    // WorkOrder
    [GeneratedCodeAttribute("EF.Reverse.POCO.Generator", "2.17.1.0")]
    public partial class Production_WorkOrder
    {

        ///<summary>
        /// Primary key for WorkOrder records.
        ///</summary>
        public int WorkOrderId { get; set; } // WorkOrderID (Primary key)

        ///<summary>
        /// Product identification number. Foreign key to Product.ProductID.
        ///</summary>
        public int ProductId { get; set; } // ProductID

        ///<summary>
        /// Product quantity to build.
        ///</summary>
        public int OrderQty { get; set; } // OrderQty

        ///<summary>
        /// Quantity built and put in inventory.
        ///</summary>
        public int StockedQty { get; set; } // StockedQty

        ///<summary>
        /// Quantity that failed inspection.
        ///</summary>
        public short ScrappedQty { get; set; } // ScrappedQty

        ///<summary>
        /// Work order start date.
        ///</summary>
        public DateTime StartDate { get; set; } // StartDate

        ///<summary>
        /// Work order end date.
        ///</summary>
        public DateTime? EndDate { get; set; } // EndDate

        ///<summary>
        /// Work order due date.
        ///</summary>
        public DateTime DueDate { get; set; } // DueDate

        ///<summary>
        /// Reason for inspection failure.
        ///</summary>
        public short? ScrapReasonId { get; set; } // ScrapReasonID

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        public DateTime ModifiedDate { get; set; } // ModifiedDate

        // Reverse navigation
        public virtual ICollection<Production_WorkOrderRouting> Production_WorkOrderRoutings { get; set; } // Many to many mapping

        // Foreign keys
        public virtual Production_Product Production_Product { get; set; } // FK_WorkOrder_Product_ProductID
        public virtual Production_ScrapReason Production_ScrapReason { get; set; } // FK_WorkOrder_ScrapReason_ScrapReasonID
        
        public Production_WorkOrder()
        {
            ModifiedDate = System.DateTime.Now;
            Production_WorkOrderRoutings = new List<Production_WorkOrderRouting>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
