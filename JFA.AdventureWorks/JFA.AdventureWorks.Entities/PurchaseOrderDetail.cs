// <auto-generated>
// ReSharper disable RedundantUsingDirective
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable RedundantNameQualifier
// TargetFrameworkVersion = 4.51
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System;
using System.Data.SqlClient;
using System.Data.SqlTypes;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity;
using System.Threading;

namespace JFA.AdventureWorks.Entities
{
    public partial class PurchaseOrderDetail
    {

        ///<summary>
        /// Primary key. Foreign key to PurchaseOrderHeader.PurchaseOrderID.
        ///</summary>
        public int PurchaseOrderId { get; set; }

        ///<summary>
        /// Primary key. One line number per purchased product.
        ///</summary>
        public int PurchaseOrderDetailId { get; set; }

        ///<summary>
        /// Date the product is expected to be received.
        ///</summary>
        public DateTime DueDate { get; set; }

        ///<summary>
        /// Quantity ordered.
        ///</summary>
        public short OrderQty { get; set; }

        ///<summary>
        /// Product identification number. Foreign key to Product.ProductID.
        ///</summary>
        public int ProductId { get; set; }

        ///<summary>
        /// Vendor's selling price of a single product.
        ///</summary>
        public decimal UnitPrice { get; set; }

        ///<summary>
        /// Per product subtotal. Computed as OrderQty * UnitPrice.
        ///</summary>
        public decimal LineTotal { get; set; }

        ///<summary>
        /// Quantity actually received from the vendor.
        ///</summary>
        public decimal ReceivedQty { get; set; }

        ///<summary>
        /// Quantity rejected during inspection.
        ///</summary>
        public decimal RejectedQty { get; set; }

        ///<summary>
        /// Quantity accepted into inventory. Computed as ReceivedQty - RejectedQty.
        ///</summary>
        public decimal StockedQty { get; set; }

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        public DateTime ModifiedDate { get; set; }

        public virtual Product Product { get; set; }
        public virtual PurchaseOrderHeader PurchaseOrderHeader { get; set; }
        
        public PurchaseOrderDetail()
        {
            ModifiedDate = System.DateTime.Now;
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
